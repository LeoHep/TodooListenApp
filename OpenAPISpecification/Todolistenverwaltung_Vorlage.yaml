openapi: 3.1.1
info:
  title: Todo-Listen-Verwaltung
  description: "Anwendung zu Verwaltung von Todo Listen"
  contact:
    email: leo.hepting@bbs-os-brinkstr.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
- url: http://127.0.0.1:5000/
tags:
- name: Listenverwaltung
paths:
  /todo-list/{list_id}/entries:
    get:
      tags:
      - Listenverwaltung
      summary: Get all items from list
      operationId: getList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List items returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list id
          content: {}
    delete:
      tags:
      - Listenverwaltung
      summary: Delete a list
      operationId: deleteList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List was deleted
          content: 
            application/json:
              schema:
                type: object
                items:
                $ref: '#/components/schemas/SuccessMessage'
        404:
          description: Invalid list id
          content: {}
  /todo-list:
    post:
      tags:
      - Listenverwaltung
      summary: Add new list
      operationId: addList
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoList'
        required: true
      responses:
        200:
          description: List added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        400:
          description: List could not be added
          content: {}
  /todo-list/{list_id}/entry:
    post:
      tags:
      - Listenverwaltung
      summary: add an entry to existing list
      operationId: postEntry
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      requestBody:
        description: list entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoEntry'
        required: true
      responses:
        200:
          description: List entry returned
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list id
          content: {}
        400:
          description: Bad request
          content: {}
  /todo-list/{list_id}/entry/{entry_id}:
    put:
      tags:
      - Listenverwaltung
      summary: update an entry
      operationId: putEntry
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      - name: entry_id
        in: path
        description: entry id
        required: true
        schema:
          type: string
      requestBody:
        description: list entry
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TodoEntry'
        required: true
      responses:
        200:
          description: List entry returned
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list or entry id
          content: {}
        400:
          description: Bad request
          content: {}
components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        user_id:
          type: string
          format: uuid
        list_id:
          type: string
          format: uuid
    SuccessMessage:
      type: object
      properties:
        msg: string
